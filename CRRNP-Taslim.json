{"id":"7d1cd93d-3e60-4e1a-8795-eb5c76f31d32","data":{"nodes":[{"id":"Data-jnZiC","type":"genericNode","position":{"x":-65.99970070499859,"y":-262.0051210657129},"data":{"type":"Data","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Optional, Union\r\n\r\nfrom langchain.llms import BaseLLM\r\nfrom langchain_community.llms import EdenAI\r\n\r\nfrom langflow import CustomComponent\r\nfrom langflow.field_typing import BaseLanguageModel, NestedDict\r\n\r\n\r\nclass EdenAIComponent(CustomComponent):\r\n    display_name = \"ChatEdenAI\"\r\n    description = \"Eden AI Chat LLMs API\"\r\n    \r\n    def build_config(self):\r\n        return {\r\n            \"edenai_api_key\": {\r\n                \"display_name\": \"EdenAI API Key\",\r\n                \"field_type\": \"str\",\r\n                \"advanced\": False,\r\n                \"reqired\": True,\r\n                \"password\": True,\r\n            },\r\n            \"temperature\": {\r\n                \"display_name\": \"Temperature\",\r\n                \"field_type\": \"float\",\r\n                \"advanced\": False,\r\n                \"required\": False,\r\n                \"value\": 0.7,\r\n            },\r\n        }\r\n    \r\n    def build(\r\n        self,\r\n        edenai_api_key: str = None,\r\n        temperature: float = 0.2,\r\n    ) -> Union[BaseLanguageModel, BaseLLM]:\r\n        return EdenAI(edenai_api_key=edenai_api_key, feature=\"text\",\r\n            provider=\"openai\",\r\n            model=\"gpt-3.5-turbo-instruct\",\r\n            temperature=temperature,\r\n            max_tokens=250,\r\n        )","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"edenai_api_key":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"edenai_api_key","display_name":"EdenAI API Key","advanced":false,"dynamic":false,"info":"","title_case":true,"value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNzk3OTJjOTgtYzM3Mi00MmM5LWEzNGItYjIzZDM1ZGM2ZjQ3IiwidHlwZSI6ImFwaV90b2tlbiJ9.gqpg7VZGLTnggqmsk4jSaW5SFGbYy5W4e0uemkYRzxU"},"temperature":{"type":"float","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":"0.2","fileTypes":[],"file_path":"","password":false,"name":"temperature","display_name":"Temperature","advanced":false,"dynamic":false,"info":"","rangeSpec":{"min":-1,"max":1,"step":0.1},"title_case":true},"_type":"CustomComponent"},"description":"Eden AI Chat LLMs API","base_classes":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"display_name":"ChatEdenAI","documentation":"","custom_fields":{"edenai_api_key":null,"temperature":null},"output_types":["BaseLanguageModel","BaseLLM"],"field_formatters":{},"beta":true},"id":"Data-jnZiC","description":"Eden AI Chat LLMs API","display_name":"ChatEdenAI"},"selected":false,"width":384,"height":459,"dragging":false,"positionAbsolute":{"x":-65.99970070499859,"y":-262.0051210657129}},{"id":"Data-qkj3J","type":"genericNode","position":{"x":-567.8038491977761,"y":-572.5816013233921},"data":{"type":"Data","node":{"template":{"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Any, Callable, Dict, List, Optional, Union\r\n\r\nfrom langchain_community.embeddings import EdenAiEmbeddings\r\nfrom langflow import CustomComponent\r\nfrom langflow.field_typing import NestedDict\r\nfrom pydantic.v1.types import SecretStr\r\n\r\nclass EdenAiEmbeddingsComponent(CustomComponent):\r\n    display_name = \"EdenAiEmbeddings\"\r\n    description = \"EdenAi embeddings models\"\r\n    \r\n    def build_config(self):\r\n        return {\r\n            \"edenai_api_key\": {\r\n                \"display_name\": \"EdenAI API Key\",\r\n                \"field_type\": \"str\",\r\n                \"advanced\": False,\r\n                \"reqired\": True,\r\n                \"password\": True,\r\n            },\r\n        }\r\n        \r\n    def build(\r\n        self,\r\n        edenai_api_key: str = None,\r\n    ) -> Union[EdenAiEmbeddings, Callable]:\r\n        return EdenAiEmbeddings(\r\n            edenai_api_key=edenai_api_key,\r\n            provider=\"openai\"\r\n        )","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"edenai_api_key":{"type":"str","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":true,"name":"edenai_api_key","display_name":"EdenAI API Key","advanced":false,"dynamic":false,"info":"","title_case":true,"value":"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoiNzk3OTJjOTgtYzM3Mi00MmM5LWEzNGItYjIzZDM1ZGM2ZjQ3IiwidHlwZSI6ImFwaV90b2tlbiJ9.gqpg7VZGLTnggqmsk4jSaW5SFGbYy5W4e0uemkYRzxU"},"_type":"CustomComponent"},"description":"EdenAi embeddings models","base_classes":["EdenAiEmbeddings","Embeddings","Callable"],"display_name":"EdenAiEmbeddings","documentation":"","custom_fields":{"edenai_api_key":null},"output_types":["EdenAiEmbeddings","Callable"],"field_formatters":{},"beta":true},"id":"Data-qkj3J","description":"EdenAi embeddings models","display_name":"EdenAiEmbeddings"},"selected":false,"width":384,"height":374,"dragging":false,"positionAbsolute":{"x":-567.8038491977761,"y":-572.5816013233921}},{"id":"AgentInitializer-7Alo9","type":"genericNode","position":{"x":911.9532660830855,"y":-912.5475235918883},"data":{"type":"AgentInitializer","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"Language Model","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseChatMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"","title_case":true},"tools":{"type":"Tool","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"tools","display_name":"Tools","advanced":false,"dynamic":false,"info":"","title_case":true},"agent":{"type":"str","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"value":"structured-chat-zero-shot-react-description","fileTypes":[],"file_path":"","password":false,"options":["zero-shot-react-description","react-docstore","self-ask-with-search","conversational-react-description","chat-zero-shot-react-description","chat-conversational-react-description","structured-chat-zero-shot-react-description","openai-functions","openai-multi-functions","JsonAgent","CSVAgent","VectorStoreAgent","VectorStoreRouterAgent","SQLAgent"],"name":"agent","display_name":"Agent Type","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import Callable, List, Optional, Union\n\nfrom langchain.agents import AgentExecutor, AgentType, initialize_agent, types\nfrom langflow import CustomComponent\nfrom langflow.field_typing import BaseChatMemory, BaseLanguageModel, Tool\n\n\nclass AgentInitializerComponent(CustomComponent):\n    display_name: str = \"Agent Initializer\"\n    description: str = \"Initialize a Langchain Agent.\"\n    documentation: str = \"https://python.langchain.com/docs/modules/agents/agent_types/\"\n\n    def build_config(self):\n        agents = list(types.AGENT_TO_CLASS.keys())\n        # field_type and required are optional\n        return {\n            \"agent\": {\"options\": agents, \"value\": agents[0], \"display_name\": \"Agent Type\"},\n            \"max_iterations\": {\"display_name\": \"Max Iterations\", \"value\": 10},\n            \"memory\": {\"display_name\": \"Memory\"},\n            \"tools\": {\"display_name\": \"Tools\"},\n            \"llm\": {\"display_name\": \"Language Model\"},\n            \"code\": {\"advanced\": True},\n        }\n\n    def build(\n        self,\n        agent: str,\n        llm: BaseLanguageModel,\n        tools: List[Tool],\n        max_iterations: int,\n        memory: Optional[BaseChatMemory] = None,\n    ) -> Union[AgentExecutor, Callable]:\n        agent = AgentType(agent)\n        if memory:\n            return initialize_agent(\n                tools=tools,\n                llm=llm,\n                agent=agent,\n                memory=memory,\n                return_intermediate_steps=True,\n                handle_parsing_errors=True,\n                max_iterations=max_iterations,\n            )\n        return initialize_agent(\n            tools=tools,\n            llm=llm,\n            agent=agent,\n            return_intermediate_steps=True,\n            handle_parsing_errors=True,\n            max_iterations=max_iterations,\n        )\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":true,"dynamic":true,"info":"","title_case":true},"max_iterations":{"type":"int","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"6","fileTypes":[],"file_path":"","password":false,"name":"max_iterations","display_name":"Max Iterations","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Initialize a Langchain Agent.","base_classes":["Chain","AgentExecutor","Callable"],"display_name":"Agent Initializer","documentation":"https://python.langchain.com/docs/modules/agents/agent_types/","custom_fields":{"agent":null,"llm":null,"tools":null,"max_iterations":null,"memory":null},"output_types":["AgentExecutor","Callable"],"field_formatters":{},"beta":true},"id":"AgentInitializer-7Alo9"},"selected":false,"width":384,"height":514,"positionAbsolute":{"x":911.9532660830855,"y":-912.5475235918883},"dragging":false},{"id":"FAISS-kR9j1","type":"genericNode","position":{"x":-108.30885807899858,"y":-1021.1726920341323},"data":{"type":"FAISS","node":{"template":{"documents":{"type":"Document","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","title_case":true},"embedding":{"type":"Embeddings","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"Relativity FAISS\"\n    description = \"Construct FAISS wrapper from raw documents (Relativity).\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents[20:75], embedding=embedding)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Construct FAISS wrapper from raw documents (Relativity).","base_classes":["VectorStore","VectorStore","FAISS","BaseRetriever"],"display_name":"FAISS","documentation":"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss","custom_fields":{"embedding":null,"documents":null},"output_types":["VectorStore","FAISS","BaseRetriever"],"field_formatters":{},"beta":true},"id":"FAISS-kR9j1","description":"Construct FAISS wrapper from raw documents (Relativity).","display_name":"FAISS"},"selected":false,"width":384,"height":396,"dragging":false,"positionAbsolute":{"x":-108.30885807899858,"y":-1021.1726920341323}},{"id":"PyPDFLoader-P5AeN","type":"genericNode","position":{"x":-597.706853804463,"y":-957.7585646511047},"data":{"type":"PyPDFLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[".pdf"],"file_path":"C:\\Users\\USER\\AppData\\Local\\langflow\\langflow\\Cache\\7d1cd93d-3e60-4e1a-8795-eb5c76f31d32\\ea9194255da789ee685cf0b13dfdb47a69666ec00ef1555241f4163c977eea02.pdf","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"title":"relativity"}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"PyPDFLoader"},"description":"Load PDF using pypdf into list of documents.","base_classes":["Document"],"display_name":"PyPDFLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"PyPDFLoader-P5AeN"},"selected":false,"width":384,"height":366,"positionAbsolute":{"x":-597.706853804463,"y":-957.7585646511047},"dragging":false},{"id":"PyPDFLoader-bA2WN","type":"genericNode","position":{"x":-619.8477474703627,"y":-1341.7409290910018},"data":{"type":"PyPDFLoader","node":{"template":{"file_path":{"type":"file","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"value":"","fileTypes":[".pdf"],"file_path":"C:\\Users\\USER\\AppData\\Local\\langflow\\langflow\\Cache\\7d1cd93d-3e60-4e1a-8795-eb5c76f31d32\\f7b15b31ca8eef4f2a92bf93539c7dbbec1c4cfb63b4e9385fbe636d5cb84a4b.pdf","password":false,"name":"file_path","advanced":false,"dynamic":false,"info":"","title_case":true},"metadata":{"type":"dict","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"value":[{"title":"nuclear processes"}],"fileTypes":[],"file_path":"","password":false,"name":"metadata","display_name":"Metadata","advanced":false,"dynamic":false,"info":"","title_case":true},"_type":"PyPDFLoader"},"description":"Load PDF using pypdf into list of documents.","base_classes":["Document"],"display_name":"PyPDFLoader","documentation":"https://python.langchain.com/docs/modules/data_connection/document_loaders/how_to/pdf","custom_fields":{},"output_types":["Document"],"field_formatters":{},"beta":false},"id":"PyPDFLoader-bA2WN"},"selected":false,"width":384,"height":366,"positionAbsolute":{"x":-619.8477474703627,"y":-1341.7409290910018},"dragging":false},{"id":"FAISS-nSOmE","type":"genericNode","position":{"x":-116.98888026561451,"y":-1513.8620114138585},"data":{"type":"FAISS","node":{"template":{"documents":{"type":"Document","required":true,"placeholder":"","list":true,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"documents","display_name":"Documents","advanced":false,"dynamic":false,"info":"","title_case":true},"embedding":{"type":"Embeddings","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"embedding","display_name":"Embedding","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from typing import List, Union\n\nfrom langchain.schema import BaseRetriever\nfrom langchain_community.vectorstores import VectorStore\nfrom langchain_community.vectorstores.faiss import FAISS\nfrom langflow import CustomComponent\nfrom langflow.field_typing import Document, Embeddings\n\n\nclass FAISSComponent(CustomComponent):\n    display_name = \"Relativity FAISS\"\n    description = \"Construct FAISS wrapper from raw documents (Nuclear Reactions).\"\n    documentation = \"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss\"\n\n    def build_config(self):\n        return {\n            \"documents\": {\"display_name\": \"Documents\"},\n            \"embedding\": {\"display_name\": \"Embedding\"},\n        }\n\n    def build(\n        self,\n        embedding: Embeddings,\n        documents: List[Document],\n    ) -> Union[VectorStore, FAISS, BaseRetriever]:\n        return FAISS.from_documents(documents=documents[369:387], embedding=embedding)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Construct FAISS wrapper from raw documents (Nuclear Reactions).","base_classes":["VectorStore","VectorStore","FAISS","BaseRetriever"],"display_name":"FAISS","documentation":"https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/faiss","custom_fields":{"embedding":null,"documents":null},"output_types":["VectorStore","FAISS","BaseRetriever"],"field_formatters":{},"beta":true},"id":"FAISS-nSOmE","description":"Construct FAISS wrapper from raw documents (Nuclear Reactions).","display_name":"FAISS"},"selected":false,"width":384,"height":396,"positionAbsolute":{"x":-116.98888026561451,"y":-1513.8620114138585},"dragging":false},{"id":"ConversationChain-kzscr","type":"genericNode","position":{"x":919.2721256053352,"y":-292.80881270043926},"data":{"type":"ConversationChain","node":{"template":{"llm":{"type":"BaseLanguageModel","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"llm","display_name":"LLM","advanced":false,"dynamic":false,"info":"","title_case":true},"memory":{"type":"BaseMemory","required":false,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"memory","display_name":"Memory","advanced":false,"dynamic":false,"info":"Memory to load context from. If none is provided, a ConversationBufferMemory will be used.","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\nfrom langchain.chains import ConversationChain\nfrom typing import Optional, Union, Callable\nfrom langflow.field_typing import BaseLanguageModel, BaseMemory, Chain\n\n\nclass ConversationChainComponent(CustomComponent):\n    display_name = \"ConversationChain\"\n    description = \"Chain to have a conversation and load context from memory.\"\n\n    def build_config(self):\n        return {\n            \"prompt\": {\"display_name\": \"Prompt\"},\n            \"llm\": {\"display_name\": \"LLM\"},\n            \"memory\": {\n                \"display_name\": \"Memory\",\n                \"info\": \"Memory to load context from. If none is provided, a ConversationBufferMemory will be used.\",\n            },\n            \"code\": {\"show\": False},\n        }\n\n    def build(\n        self,\n        llm: BaseLanguageModel,\n        memory: Optional[BaseMemory] = None,\n    ) -> Union[Chain, Callable]:\n        if memory is None:\n            return ConversationChain(llm=llm)\n        return ConversationChain(llm=llm, memory=memory)\n","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Chain to have a conversation and load context from memory.","base_classes":["Chain","Callable"],"display_name":"ConversationChain","documentation":"","custom_fields":{"llm":null,"memory":null},"output_types":["Chain","Callable"],"field_formatters":{},"beta":true},"id":"ConversationChain-kzscr"},"selected":false,"width":384,"height":396,"positionAbsolute":{"x":919.2721256053352,"y":-292.80881270043926},"dragging":false},{"id":"Data-c3qAP","type":"genericNode","position":{"x":384.8926830550025,"y":-935.0095682640069},"data":{"type":"Data","node":{"template":{"faiss_index":{"type":"VectorStore","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"faiss_index","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\r\nfrom langchain.agents import tool, Tool\r\nfrom langchain.schema import BaseRetriever\r\nfrom langchain_community.vectorstores import VectorStore\r\nfrom typing import Callable, Type\r\nfrom pydantic import Field, BaseModel\r\n\r\n\r\nclass RelativityDocumentSearchTool(CustomComponent):\r\n    display_name: str = \"Relativity Document Search\"\r\n    description: str = \"Takes in a vector store index, a topic and a query parameter\"\r\n    output_types: list[str] = [\"String\"]\r\n    field_config = {\r\n        # \"faiss_index\": {\r\n        #     \"display_name\": \"FAISS Index\",\r\n        #     \"field_type\": \"VectorStore\",\r\n        #     \"info\": \"Faiss index from documents\",\r\n        # },\r\n        \"q\": {\r\n            \"display_name\": \"query\",\r\n            \"field_type\": \"str\",\r\n            \"reqired\": False,\r\n        },\r\n    #     \"topic\": {\r\n    #         \"display_name\": \"topic\",\r\n    #         \"field_type\": \"str\",\r\n    #         \"reqired\": True\r\n    #     }\r\n    }\r\n    def build(\r\n        self, faiss_index: VectorStore\r\n    ) -> Tool:\r\n        class PydanticBaseModel(BaseModel):\r\n            class Config:\r\n                arbitrary_types_allowed = True\r\n\r\n        class DocumentSearchInput(PydanticBaseModel):\r\n            faiss_index: VectorStore = Field(description=\"Vector store FAISS index\")\r\n            q: str = Field(description=\"should be a search query\")\r\n            \r\n        class TopicDocumentSearchTool(BaseTool):\r\n            name = \"topic_document_search\"\r\n            description = \"Search documents related to a specific topic using a vector index.\"\r\n            args_schema: Type[BaseModel] = DocumentSearchInput\r\n        \r\n            # def __init__(self, faiss_index: Optional[VectorStore] = None):\r\n            #     \"\"\"\r\n            #     Initialize the tool with an optional pre-defined FAISS index.\r\n            #     \"\"\"\r\n            #     self.faiss_index = faiss_index\r\n        \r\n            def _run(\r\n                self, q: str, faiss_index: Optional[VectorStore] = faiss_index\r\n            ) -> str:\r\n                \"\"\"\r\n                Executes the document search for a given topic and query.\r\n        \r\n                Args:\r\n                q: The search query string.\r\n                topic: The specific topic to search documents for.\r\n                faiss_index: The FAISS vector store to use for similarity search \r\n                            (defaults to the one provided during initialization).\r\n        \r\n                Returns:\r\n                A string containing the content of the most relevant documents \r\n                concatenated with newlines.\r\n                \"\"\"\r\n                if faiss_index is None:\r\n                # Handle case where no FAISS index provided during call or initialization\r\n                    raise ValueError(\"FAISS index required for document search.\")\r\n        \r\n                # Use the provided FAISS index for similarity search\r\n                docs = faiss_index.similarity_search(q)\r\n                return \"\\n\\n\".join([doc.page_content for doc in docs])\r\n            \r\n        search = TopicDocumentSearchTool()\r\n        \r\n        doc_tool = Tool(\r\n            name = \"Relativity Document Search\",\r\n            func = search._run,\r\n            description = \"Useful when you want to answer questions on Relativity.\"\r\n            )\r\n        \r\n                \r\n        return doc_tool","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Takes in a vector store index, a topic and a query parameter","base_classes":["BaseTool","Tool"],"display_name":"Relativity Document Search","documentation":"","custom_fields":{"faiss_index":null},"output_types":["Tool"],"field_formatters":{},"beta":true},"id":"Data-c3qAP","description":"Takes in a vector store index, a topic and a query parameter","display_name":"Relativity Document Search"},"selected":true,"width":384,"height":348,"dragging":false,"positionAbsolute":{"x":384.8926830550025,"y":-935.0095682640069}},{"id":"Data-3jdvP","type":"genericNode","position":{"x":340.4736403387683,"y":-1432.4517281381081},"data":{"type":"Data","node":{"template":{"faiss_index":{"type":"VectorStore","required":true,"placeholder":"","list":false,"show":true,"multiline":false,"fileTypes":[],"file_path":"","password":false,"name":"faiss_index","advanced":false,"dynamic":false,"info":"","title_case":true},"code":{"type":"code","required":true,"placeholder":"","list":false,"show":true,"multiline":true,"value":"from langflow import CustomComponent\r\nfrom langchain.agents import tool, Tool\r\nfrom langchain.schema import BaseRetriever\r\nfrom langchain_community.vectorstores import VectorStore\r\nfrom typing import Callable, Type\r\nfrom pydantic import Field, BaseModel\r\n\r\n\r\nclass RelativityDocumentSearchTool(CustomComponent):\r\n    display_name: str = \"Nuclear Processes Document Search\"\r\n    description: str = \"Takes in a vector store index, a topic and a query parameter\"\r\n    output_types: list[str] = [\"String\"]\r\n    field_config = {\r\n        # \"faiss_index\": {\r\n        #     \"display_name\": \"FAISS Index\",\r\n        #     \"field_type\": \"VectorStore\",\r\n        #     \"info\": \"Faiss index from documents\",\r\n        # },\r\n        \"q\": {\r\n            \"display_name\": \"query\",\r\n            \"field_type\": \"str\",\r\n            \"reqired\": False,\r\n        },\r\n        # \"topic\": {\r\n        #     \"display_name\": \"topic\",\r\n        #     \"field_type\": \"str\",\r\n        #     \"reqired\": True\r\n        # }\r\n    }\r\n    def build(\r\n        self, faiss_index: VectorStore\r\n    ) -> Tool:\r\n        class PydanticBaseModel(BaseModel):\r\n            class Config:\r\n                arbitrary_types_allowed = True\r\n\r\n        class DocumentSearchInput(PydanticBaseModel):\r\n            faiss_index: VectorStore = Field(description=\"Vector store FAISS index\")\r\n            q: str = Field(description=\"should be a search query\")\r\n            \r\n        class TopicDocumentSearchTool(BaseTool):\r\n            name = \"topic_document_search\"\r\n            description = \"Search documents related to a specific topic using a vector index.\"\r\n            args_schema: Type[BaseModel] = DocumentSearchInput\r\n        \r\n            # def __init__(self, faiss_index: Optional[VectorStore] = None):\r\n            #     \"\"\"\r\n            #     Initialize the tool with an optional pre-defined FAISS index.\r\n            #     \"\"\"\r\n            #     self.faiss_index = faiss_index\r\n        \r\n            def _run(\r\n                self, q: str, faiss_index: Optional[VectorStore] = faiss_index\r\n            ) -> str:\r\n                \"\"\"\r\n                Executes the document search for a given topic and query.\r\n        \r\n                Args:\r\n                q: The search query string.\r\n                topic: The specific topic to search documents for.\r\n                faiss_index: The FAISS vector store to use for similarity search \r\n                            (defaults to the one provided during initialization).\r\n        \r\n                Returns:\r\n                A string containing the content of the most relevant documents \r\n                concatenated with newlines.\r\n                \"\"\"\r\n                if faiss_index is None:\r\n                # Handle case where no FAISS index provided during call or initialization\r\n                    raise ValueError(\"FAISS index required for document search.\")\r\n        \r\n                # Use the provided FAISS index for similarity search\r\n                docs = faiss_index.similarity_search(q)\r\n                return \"\\n\\n\".join([doc.page_content for doc in docs])\r\n            \r\n        search = TopicDocumentSearchTool()\r\n        \r\n        doc_tool = Tool(\r\n            name = \"Nuclear Processes Document Search\",\r\n            func = search._run,\r\n            description = \"Useful when you want to answer questions on Nuclear Processes.\"\r\n            )\r\n        \r\n                \r\n        return doc_tool","fileTypes":[],"file_path":"","password":false,"name":"code","advanced":false,"dynamic":true,"info":"","title_case":true},"_type":"CustomComponent"},"description":"Takes in a vector store index, a topic and a query parameter","base_classes":["BaseTool","Tool"],"display_name":"Nuclear Processes Document Search","documentation":"","custom_fields":{"faiss_index":null},"output_types":["Tool"],"field_formatters":{},"beta":true},"id":"Data-3jdvP","description":"Takes in a vector store index, a topic and a query parameter","display_name":"Nuclear Processes Document Search"},"selected":false,"width":384,"height":348,"dragging":false,"positionAbsolute":{"x":340.4736403387683,"y":-1432.4517281381081}}],"edges":[{"source":"PyPDFLoader-P5AeN","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-P5AeNœ}","target":"FAISS-kR9j1","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-kR9j1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"FAISS-kR9j1","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"PyPDFLoader","id":"PyPDFLoader-P5AeN"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PyPDFLoader-P5AeN{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-P5AeNœ}-FAISS-kR9j1{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-kR9j1œ,œinputTypesœ:null,œtypeœ:œDocumentœ}"},{"source":"Data-jnZiC","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-jnZiCœ}","target":"AgentInitializer-7Alo9","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"AgentInitializer-7Alo9","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"dataType":"Data","id":"Data-jnZiC"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-Data-jnZiC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-jnZiCœ}-AgentInitializer-7Alo9{œfieldNameœ:œllmœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"},{"source":"Data-qkj3J","sourceHandle":"{œbaseClassesœ:[œEdenAiEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œDataœ,œidœ:œData-qkj3Jœ}","target":"FAISS-kR9j1","targetHandle":"{œfieldNameœ:œembeddingœ,œidœ:œFAISS-kR9j1œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","data":{"targetHandle":{"fieldName":"embedding","id":"FAISS-kR9j1","inputTypes":null,"type":"Embeddings"},"sourceHandle":{"baseClasses":["EdenAiEmbeddings","Embeddings","Callable"],"dataType":"Data","id":"Data-qkj3J"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-Data-qkj3J{œbaseClassesœ:[œEdenAiEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œDataœ,œidœ:œData-qkj3Jœ}-FAISS-kR9j1{œfieldNameœ:œembeddingœ,œidœ:œFAISS-kR9j1œ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"},{"source":"PyPDFLoader-bA2WN","sourceHandle":"{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-bA2WNœ}","target":"FAISS-nSOmE","targetHandle":"{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-nSOmEœ,œinputTypesœ:null,œtypeœ:œDocumentœ}","data":{"targetHandle":{"fieldName":"documents","id":"FAISS-nSOmE","inputTypes":null,"type":"Document"},"sourceHandle":{"baseClasses":["Document"],"dataType":"PyPDFLoader","id":"PyPDFLoader-bA2WN"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-PyPDFLoader-bA2WN{œbaseClassesœ:[œDocumentœ],œdataTypeœ:œPyPDFLoaderœ,œidœ:œPyPDFLoader-bA2WNœ}-FAISS-nSOmE{œfieldNameœ:œdocumentsœ,œidœ:œFAISS-nSOmEœ,œinputTypesœ:null,œtypeœ:œDocumentœ}"},{"source":"Data-qkj3J","sourceHandle":"{œbaseClassesœ:[œEdenAiEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œDataœ,œidœ:œData-qkj3Jœ}","target":"FAISS-nSOmE","targetHandle":"{œfieldNameœ:œembeddingœ,œidœ:œFAISS-nSOmEœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}","data":{"targetHandle":{"fieldName":"embedding","id":"FAISS-nSOmE","inputTypes":null,"type":"Embeddings"},"sourceHandle":{"baseClasses":["EdenAiEmbeddings","Embeddings","Callable"],"dataType":"Data","id":"Data-qkj3J"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-Data-qkj3J{œbaseClassesœ:[œEdenAiEmbeddingsœ,œEmbeddingsœ,œCallableœ],œdataTypeœ:œDataœ,œidœ:œData-qkj3Jœ}-FAISS-nSOmE{œfieldNameœ:œembeddingœ,œidœ:œFAISS-nSOmEœ,œinputTypesœ:null,œtypeœ:œEmbeddingsœ}"},{"source":"Data-jnZiC","sourceHandle":"{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-jnZiCœ}","target":"ConversationChain-kzscr","targetHandle":"{œfieldNameœ:œllmœ,œidœ:œConversationChain-kzscrœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}","data":{"targetHandle":{"fieldName":"llm","id":"ConversationChain-kzscr","inputTypes":null,"type":"BaseLanguageModel"},"sourceHandle":{"baseClasses":["BaseLanguageModel","BaseLanguageModel","BaseLLM"],"dataType":"Data","id":"Data-jnZiC"}},"style":{"stroke":"#555"},"className":"stroke-gray-900  stroke-connection","animated":false,"id":"reactflow__edge-Data-jnZiC{œbaseClassesœ:[œBaseLanguageModelœ,œBaseLanguageModelœ,œBaseLLMœ],œdataTypeœ:œDataœ,œidœ:œData-jnZiCœ}-ConversationChain-kzscr{œfieldNameœ:œllmœ,œidœ:œConversationChain-kzscrœ,œinputTypesœ:null,œtypeœ:œBaseLanguageModelœ}"},{"source":"Data-c3qAP","sourceHandle":"{œbaseClassesœ:[œBaseToolœ,œToolœ],œdataTypeœ:œDataœ,œidœ:œData-c3qAPœ}","target":"AgentInitializer-7Alo9","targetHandle":"{œfieldNameœ:œtoolsœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œToolœ}","data":{"targetHandle":{"fieldName":"tools","id":"AgentInitializer-7Alo9","inputTypes":null,"type":"Tool"},"sourceHandle":{"baseClasses":["BaseTool","Tool"],"dataType":"Data","id":"Data-c3qAP"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-Data-c3qAP{œbaseClassesœ:[œBaseToolœ,œToolœ],œdataTypeœ:œDataœ,œidœ:œData-c3qAPœ}-AgentInitializer-7Alo9{œfieldNameœ:œtoolsœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œToolœ}"},{"source":"Data-3jdvP","sourceHandle":"{œbaseClassesœ:[œBaseToolœ,œToolœ],œdataTypeœ:œDataœ,œidœ:œData-3jdvPœ}","target":"AgentInitializer-7Alo9","targetHandle":"{œfieldNameœ:œtoolsœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œToolœ}","data":{"targetHandle":{"fieldName":"tools","id":"AgentInitializer-7Alo9","inputTypes":null,"type":"Tool"},"sourceHandle":{"baseClasses":["BaseTool","Tool"],"dataType":"Data","id":"Data-3jdvP"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-Data-3jdvP{œbaseClassesœ:[œBaseToolœ,œToolœ],œdataTypeœ:œDataœ,œidœ:œData-3jdvPœ}-AgentInitializer-7Alo9{œfieldNameœ:œtoolsœ,œidœ:œAgentInitializer-7Alo9œ,œinputTypesœ:null,œtypeœ:œToolœ}"},{"source":"FAISS-kR9j1","sourceHandle":"{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-kR9j1œ}","target":"Data-c3qAP","targetHandle":"{œfieldNameœ:œfaiss_indexœ,œidœ:œData-c3qAPœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}","data":{"targetHandle":{"fieldName":"faiss_index","id":"Data-c3qAP","inputTypes":null,"type":"VectorStore"},"sourceHandle":{"baseClasses":["VectorStore","VectorStore","FAISS","BaseRetriever"],"dataType":"FAISS","id":"FAISS-kR9j1"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-FAISS-kR9j1{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-kR9j1œ}-Data-c3qAP{œfieldNameœ:œfaiss_indexœ,œidœ:œData-c3qAPœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"},{"source":"FAISS-nSOmE","sourceHandle":"{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-nSOmEœ}","target":"Data-3jdvP","targetHandle":"{œfieldNameœ:œfaiss_indexœ,œidœ:œData-3jdvPœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}","data":{"targetHandle":{"fieldName":"faiss_index","id":"Data-3jdvP","inputTypes":null,"type":"VectorStore"},"sourceHandle":{"baseClasses":["VectorStore","VectorStore","FAISS","BaseRetriever"],"dataType":"FAISS","id":"FAISS-nSOmE"}},"style":{"stroke":"#555"},"className":"stroke-foreground  stroke-connection","animated":false,"id":"reactflow__edge-FAISS-nSOmE{œbaseClassesœ:[œVectorStoreœ,œVectorStoreœ,œFAISSœ,œBaseRetrieverœ],œdataTypeœ:œFAISSœ,œidœ:œFAISS-nSOmEœ}-Data-3jdvP{œfieldNameœ:œfaiss_indexœ,œidœ:œData-3jdvPœ,œinputTypesœ:null,œtypeœ:œVectorStoreœ}"}],"viewport":{"x":106.9810808129198,"y":786.1579278563125,"zoom":0.6433822722200893}},"description":"Custom RAG for Relativity and Nuclear Processes.","name":"CRRNP-Taslim","last_tested_version":"0.6.10","is_component":false}